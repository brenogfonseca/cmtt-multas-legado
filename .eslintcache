[{"D:\\DEV\\REACT\\vacina\\src\\index.js":"1","D:\\DEV\\REACT\\vacina\\src\\components\\Content.js":"2","D:\\DEV\\REACT\\vacina\\src\\components\\Header.js":"3","D:\\DEV\\REACT\\vacina\\src\\router.js":"4","D:\\DEV\\REACT\\vacina\\src\\Vacina\\Cadastro.js":"5","D:\\DEV\\REACT\\vacina\\src\\Vacina\\Sidebar.js":"6","D:\\DEV\\REACT\\vacina\\src\\serviceWorker.js":"7","D:\\DEV\\REACT\\vacina\\src\\App.js":"8","D:\\DEV\\REACT\\vacina\\src\\services\\dados.js":"9","D:\\DEV\\REACT\\vacina\\src\\components\\Acessar.js":"10","D:\\DEV\\REACT\\vacina\\src\\components\\Footer.js":"11","D:\\DEV\\REACT\\vacina\\src\\Vacina\\Navtop.js":"12","D:\\DEV\\REACT\\vacina\\src\\services\\api.js":"13","D:\\DEV\\REACT\\vacina\\src\\services\\auth.js":"14"},{"size":259,"mtime":1588680471828,"results":"15","hashOfConfig":"16"},{"size":3787,"mtime":1589806374918,"results":"17","hashOfConfig":"16"},{"size":6429,"mtime":1588680471828,"results":"18","hashOfConfig":"16"},{"size":1219,"mtime":1611020219159,"results":"19","hashOfConfig":"16"},{"size":25792,"mtime":1589802347169,"results":"20","hashOfConfig":"16"},{"size":8843,"mtime":1608443518334,"results":"21","hashOfConfig":"16"},{"size":5089,"mtime":1588680471828,"results":"22","hashOfConfig":"16"},{"size":372,"mtime":1588680471813,"results":"23","hashOfConfig":"16"},{"size":14261,"mtime":1608446015538,"results":"24","hashOfConfig":"16"},{"size":3702,"mtime":1588680471828,"results":"25","hashOfConfig":"16"},{"size":1386,"mtime":1588680471828,"results":"26","hashOfConfig":"16"},{"size":3888,"mtime":1588680471828,"results":"27","hashOfConfig":"16"},{"size":854,"mtime":1608441886778,"results":"28","hashOfConfig":"16"},{"size":287,"mtime":1588680471828,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1yg5d9i",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\DEV\\REACT\\vacina\\src\\index.js",[],["62","63"],"D:\\DEV\\REACT\\vacina\\src\\components\\Content.js",[],"D:\\DEV\\REACT\\vacina\\src\\components\\Header.js",[],"D:\\DEV\\REACT\\vacina\\src\\router.js",["64"],"import React from \"react\";\r\nimport App from \"./App\";\r\nimport { isAuthenticated } from \"./services/dados\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Cadastro from \"./Vacina/Cadastro\";\r\nimport Acessar from \"./components/Acessar\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n\r\n    <Route\r\n        {...rest}\r\n        render={\r\n\r\n            props =>\r\n                isAuthenticated() ? (\r\n                    < Component {...props} />\r\n\r\n                ) : (\r\n                        <Redirect\r\n                            to={{ pathname: \"/Acessar\", state: { from: props.location } }}\r\n                        />\r\n                    )\r\n\r\n        }\r\n    />\r\n);\r\nconst Routes = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path=\"/\" exact={true} component={App} />\r\n            <Route path=\"/Inicio\" component={App} />\r\n            <Route path=\"/FaleConosco\" component={App} />\r\n            <Route path=\"/Acessar\" component={Acessar} />\r\n            <PrivateRoute path=\"/Cadastro\" component={Cadastro} />\r\n            <PrivateRoute path=\"/Vacina\" component={Panel} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\nexport default Routes;","D:\\DEV\\REACT\\vacina\\src\\Vacina\\Cadastro.js",["65"],"import React, { Component } from \"react\";\r\nimport { TextField, InputAdornment, Tooltip } from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Sidebar from \"./Sidebar\";\r\nimport NavTop from \"./Navtop\";\r\nimport Footer from \"../components/Footer\";\r\nimport { apiBusca } from \"../services/api\";\r\nimport { getUsers, getProfissoes, token, getCadastrados, getBairros } from \"../services/dados\"\r\n/* eslint eqeqeq: \"off\", curly: \"error\" */\r\nconst { cpf } = require('cpf-cnpj-validator');\r\nconst $ = require('jquery');\r\n\r\n\r\nexport function Alerta(param) {\r\n  const open = param.setOpen;\r\n  var status = param.classe\r\n  var classe\r\n  if (status === 200) {\r\n    classe = \"success\"\r\n  } else if (status === 201 || status === 110) {\r\n    classe = \"error\"\r\n  }\r\n  return (\r\n    <div>\r\n      <Snackbar open={open} autoHideDuration={200}>\r\n        <Alert severity={classe}>\r\n          {param.texto}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst inputParsers = {\r\n  date(input) {\r\n    const [month, day, year] = input.split(\"/\");\r\n    return `${year}-${month}-${day}`;\r\n  },\r\n  uppercase(input) {\r\n    return input.toUpperCase();\r\n  },\r\n  number(input) {\r\n    return parseFloat(input);\r\n  }\r\n};\r\n\r\nclass Cadastro extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dados: [],\r\n      profissoes: [],\r\n      emp30: '',\r\n      bolsaF: '',\r\n      bpcAp: '',\r\n      benef: '',\r\n      alert: {\r\n        status: '',\r\n        message: ''\r\n      },\r\n      cpf: '',\r\n      tipRes: '',\r\n      quadra: '',\r\n      lote: '',\r\n      pontoreferencia: '',\r\n      bairros: []\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getEventos = this.getEventos.bind(this);\r\n  }\r\n\r\n  getEventos() {\r\n    getProfissoes().then(response => {\r\n      this.setState({ profissoes: response.data })\r\n    })\r\n    getBairros().then(response => {\r\n      this.setState({ bairros: response.data })\r\n    })\r\n    getUsers().then(response2 => {\r\n      this.setState({ dados: response2.data })\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getEventos();\r\n  }\r\n\r\n  apareceAlert() {\r\n    setTimeout(() => {\r\n      this.setState({ setOpen: false })\r\n      return (window.location = \"/Cadastro\");\r\n    }, 1 * 1000)\r\n  }\r\n  buscaEndereco = e => {\r\n    var bairro = e.target.value;\r\n    var logradouro = $('#rua').val()\r\n    var numero = $('#numero').val()\r\n    var complemento = $('#complemento').val()\r\n    var quadra = $('#quadra').val()\r\n    var lote = $('#lote').val()\r\n\r\n    if (numero === null || numero === '') { numero = 0 }\r\n    // if (complemento === null || complemento === '') { complemento = 0 }\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", token)\r\n\r\n    var raw = {\r\n      \"logradouro\": logradouro,\r\n      \"numero\": numero,\r\n      \"complemento\": complemento,\r\n      \"bairro\": bairro,\r\n      \"quadra\": quadra,\r\n      \"lote\": lote\r\n    }\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n    apiBusca.post(\"/regras/endereco\", requestOptions)\r\n      .then(response => {\r\n        if (response.data.existe === 1) {\r\n          alert(\"Endereço já cadastrado no sistema sob o cpf: \" + response.data.cpf)\r\n          $('#bairro').val('')\r\n          $('#rua').val('')\r\n          $('#numero').val('')\r\n          $('#complemento').val('')\r\n          $('#quadra').val('')\r\n          $('#lote').val('')\r\n        }\r\n      })\r\n      .catch(error => error)\r\n    //event.target.reset();\r\n    //alert(logradouro + numero + complemento + bairro)\r\n  }\r\n\r\n  buscaCpf = event => {\r\n    var id = event.target.value;\r\n    let validCPF = cpf.isValid(id)\r\n    if (validCPF === false) {\r\n      alert(\"Verifique o CPF digitado ele está inválido\")\r\n      this.setState({ cpf: '' })\r\n      setTimeout(() => {\r\n        $(\"#resposta\").html('');\r\n      }, 1 * 1000)\r\n    }\r\n    else {\r\n      getCadastrados(id).then(response => {\r\n        if (response.data >= 1) {\r\n          alert(\"Usuario já Cadastrado, Você será redirecionado para o perfil do cadastrado\")\r\n          var e = window.btoa(id)\r\n          return (window.location = \"/CadastroCpf?\" + e)\r\n          this.setState({ cpf: '' })\r\n          setTimeout(() => {\r\n            $(\"#resposta\").html('');\r\n          }, 1 * 1000)\r\n        } else {\r\n          setTimeout(() => {\r\n            $(\"#resposta\").html('');\r\n          }, 1 * 1000)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  valueCPF = (event) => {\r\n    this.setState({ cpf: event.target.value })\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const data = new FormData(form);\r\n\r\n    for (let name of data.keys()) {\r\n      const input = form.elements[name];\r\n      const parserName = input.dataset.parse;\r\n\r\n      if (parserName) {\r\n        const parser = inputParsers[parserName];\r\n        const parsedValue = parser(data.get(name));\r\n        data.set(name, parsedValue);\r\n      }\r\n    }\r\n    function stringifyFormData(fd) {\r\n      const data = {};\r\n      for (let key of fd.keys()) {\r\n        data[key] = fd.get(key);\r\n      }\r\n      return JSON.stringify(data, null, 2);\r\n    }\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", token)\r\n\r\n    var raw = stringifyFormData(data);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    apiBusca.post(\"/cadastro/\", requestOptions)\r\n      .then(response => {\r\n        this.setState({\r\n          alert: {\r\n            status: response.data.response.status,\r\n            message: response.data.response.result\r\n          }\r\n        })\r\n        this.setState({ setOpen: true })\r\n        this.apareceAlert()\r\n\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          alert: {\r\n            status: 201,\r\n            message: \"ERRO\"\r\n          }\r\n        })\r\n        this.setState({ setOpen: true })\r\n      })\r\n    //event.target.reset();\r\n  }\r\n  numeroChange = (event) => {\r\n    this.setState({ numero: event.target.value })\r\n  };\r\n  emp30Change = (event) => {\r\n    this.setState({ emp30: event.target.value })\r\n  };\r\n  bolsaFChange = (event) => {\r\n    this.setState({ bolsaF: event.target.value })\r\n  };\r\n  bpcApChange = (event) => {\r\n    this.setState({ bpcAp: event.target.value })\r\n  };\r\n  tipResChange = (event) => {\r\n    this.setState({ tipRes: event.target.value })\r\n  };\r\n  benefChange = (event) => {\r\n    this.setState({ benef: event.target.value })\r\n  };\r\n  quadraChange = (event) => {\r\n    this.setState({ quadra: event.target.value })\r\n  };\r\n  loteChange = (event) => {\r\n    this.setState({ lote: event.target.value })\r\n  };\r\n  pontoreferenciaChange = (event) => {\r\n    this.setState({ pontoreferencia: event.target.value })\r\n  };\r\n  render() {\r\n    var alertMsg = this.state.alert\r\n    const valores = [\r\n      {\r\n        value: 'sim',\r\n        label: 'Sim',\r\n      },\r\n      {\r\n        value: 'nao',\r\n        label: 'Não',\r\n      },\r\n    ];\r\n    const benef = [\r\n      {\r\n        value: 'recebido',\r\n        label: 'Recebido',\r\n      },\r\n      {\r\n        value: 'analise',\r\n        label: 'Em Análise',\r\n      },\r\n      {\r\n        value: 'negado',\r\n        label: 'Negado',\r\n      },\r\n      {\r\n        value: 'naosolicitado',\r\n        label: 'Não Solicitado',\r\n      },\r\n    ]\r\n    const tipRes = [\r\n      {\r\n        value: 'alugada',\r\n        label: 'Alugada',\r\n      },\r\n      {\r\n        value: 'cedida',\r\n        label: 'Cedida',\r\n      },\r\n      {\r\n        value: 'propria',\r\n        label: 'Própria',\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"skin-blue bg-light sidebar-mini\" id=\"panel\">\r\n        <div className=\"wrapper\">\r\n          <NavTop dados={this.state.dados} />\r\n          <Sidebar dados={this.state.dados} />\r\n          <br />\r\n          <div className=\"content-wrapper\">\r\n            {/* Content Header (Page header) */}\r\n            <section className=\"content-header\">\r\n              <h1>\r\n                Início\r\n            <small>V. API 0.1</small>\r\n              </h1>\r\n              <ol className=\"breadcrumb\">\r\n                <li>\r\n                  <a href=\"/Social\">\r\n                    <i className=\"fa fa-dashboard\" />Início\r\n              </a>\r\n                </li>\r\n              </ol>\r\n            </section>\r\n            {/* Main content */}\r\n            <section className=\"content\">\r\n              <form id=\"wizard\" onSubmit={this.handleSubmit}>\r\n                <Alerta\r\n                  setOpen={this.state.setOpen}\r\n                  texto={alertMsg.message}\r\n                  classe={alertMsg.status} />\r\n                <fieldset className=\"card\">\r\n                  <legend className=\"card-header text-left legend-pma faq-btn-link\">\r\n                    Informações importantes\r\n              </legend>\r\n                  <div id='resposta'></div>\r\n                  <div className=\"col-md-12 campos-pma card-body\">\r\n                    <TextField\r\n                      required\r\n                      className=\"ml-3 mb-3 col-md-6\"\r\n                      id=\"filled-size-normal\"\r\n                      InputProps={{\r\n                        readOnly: false\r\n                      }}\r\n                      fullWidth\r\n                      name=\"nome\"\r\n                      label=\"Nome\"\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      inputProps={{\r\n                        maxLength: 200,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"mb-3 ml-3 col-md-5\"\r\n                      id=\"telefone\"\r\n                      InputProps={{\r\n                        readOnly: false\r\n                      }}\r\n                      fullWidth\r\n                      name=\"telefone\"\r\n                      label=\"Telefone\"\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      inputProps={{\r\n                        maxLength: 15,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"ml-3 mb-3 col-md-6\"\r\n                      id=\"cpf\"\r\n                      InputProps={{\r\n                        readOnly: false\r\n                      }}\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      label=\"C.P.F.\"\r\n                      variant=\"outlined\"\r\n                      value={this.state.cpf}\r\n                      onChange={this.valueCPF}\r\n                      type=\"text\"\r\n                      onBlur={this.buscaCpf}\r\n                    />\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"mb-3 ml-3 col-md-5\"\r\n                      id=\"dataNasc\"\r\n                      InputProps={{\r\n                        readOnly: false\r\n                      }}\r\n                      fullWidth\r\n                      name=\"dtNascimento\"\r\n                      label=\"Data de Nascimento\"\r\n                      variant=\"outlined\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    />\r\n\r\n                    <Autocomplete\r\n                      className=\"mb-3 col-md-12\"\r\n                      id=\"combo-box-demo\"\r\n                      options={this.state.profissoes}\r\n                      getOptionLabel={(option) => option.titulo}\r\n                      renderInput={(params) =>\r\n                        <TextField {...params} fullWidth\r\n                          label=\"Profissão\" required name=\"profissao\" variant=\"outlined\" />}\r\n                    />\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"ml-3 mb-3 col-md-6\"\r\n                      id=\"nPessGF\"\r\n                      InputProps={{\r\n                        readOnly: false\r\n                      }}\r\n                      fullWidth\r\n                      name=\"nPessGF\"\r\n                      label=\"Nº de pessoas no grupo familiar\"\r\n                      variant=\"outlined\"\r\n                      type=\"number\"\r\n                      inputProps={{\r\n                        maxLength: 5,\r\n                        min: 1,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"ml-3 mb-3 col-md-5\"\r\n                      id=\"rendaFamiliar\"\r\n                      fullWidth\r\n                      name=\"rendaFamiliar\"\r\n                      label=\"Renda familiar total\"\r\n                      variant=\"outlined\"\r\n                      type=\"number\"\r\n                      InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\r\n                      }}\r\n                      inputProps={{\r\n                        maxLength: 5,\r\n                        max: 99999,\r\n                        min: 0,\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"mb-3 ml-3 col-md-11 required\"\r\n                      id=\"emp30\"\r\n                      select\r\n                      fullWidth\r\n                      name=\"emp30\"\r\n                      SelectProps={{\r\n                        native: true,\r\n                      }}\r\n                      value={this.state.emp30}\r\n                      onChange={this.emp30Change}\r\n                      label=\"Perdeu o emprego nos últimos 30 dias?\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <option key={0} value=''></option>\r\n                      {valores.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </TextField>\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"mb-3 ml-3 col-md-11\"\r\n                      id=\"bpcAp\"\r\n                      select\r\n                      fullWidth\r\n                      name=\"bpcAp\"\r\n                      SelectProps={{\r\n                        native: true,\r\n                      }}\r\n                      value={this.state.bpcAp}\r\n                      onChange={this.bpcApChange}\r\n                      label=\"Tem Aposentado ou BPC no núcleo familiar?\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <option key={0} value=''></option>\r\n                      {valores.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </TextField>\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"mb-3 ml-3 col-md-11\"\r\n                      id=\"bolsaF\"\r\n                      select\r\n                      fullWidth\r\n                      name=\"bolsaF\"\r\n                      SelectProps={{\r\n                        native: true,\r\n                      }}\r\n                      value={this.state.bolsaF}\r\n                      onChange={this.bolsaFChange}\r\n                      label=\"Recebe Bolsa Familía?\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <option key={0} value=''></option>\r\n                      {valores.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </TextField>\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"mb-3 ml-3 col-md-11\"\r\n                      id=\"tipoRes\"\r\n                      select\r\n                      fullWidth\r\n                      name=\"tipoRes\"\r\n                      SelectProps={{\r\n                        native: true,\r\n                      }}\r\n                      value={this.state.tipRes}\r\n                      onChange={this.tipResChange}\r\n                      label=\"Tipo de residência\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <option key={0} value=''></option>\r\n                      {tipRes.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </TextField>\r\n\r\n                    <TextField\r\n                      required\r\n                      className=\"mb-3 ml-3 col-md-11\"\r\n                      id=\"benef\"\r\n                      select\r\n                      fullWidth\r\n                      name=\"benef\"\r\n                      SelectProps={{\r\n                        native: true,\r\n                      }}\r\n                      value={this.state.benef}\r\n                      onChange={this.benefChange}\r\n                      label=\"Auxílio Emergencial\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <option key={0} value=''></option>\r\n                      {benef.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </TextField>\r\n\r\n                  </div>\r\n                </fieldset>\r\n                <fieldset className=\"card \">\r\n                  <legend className=\"col-md-12  text-left card-header legend-pma faq-btn-link\">\r\n                    Endereço\r\n              </legend>\r\n                  <br />\r\n                  <div className=\"col-md-12 campos-pma\">\r\n                    {/* <div className=\"col-md-6\">\r\n                      <TextField\r\n                        id=\"cep\"\r\n                        fullWidth\r\n                        required\r\n                        name=\"cep\"\r\n                        label=\"CEP\"\r\n                        variant=\"outlined\" type=\"text\"\r\n                        value={this.state.cep}\r\n                        onChange={this.cepChange}\r\n                        onBlur={this.cepBlur}\r\n                        InputLabelProps={{\r\n                          shrink: true\r\n                        }}\r\n                      /> */}\r\n                    {/* </div> */}\r\n                    <div className=\"col-md-6\">\r\n                      <Tooltip\r\n                        title=\"Digitar a Rua, Av., Trav. não deixar em branco ou com 0\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <TextField\r\n                          id=\"rua\"\r\n                          required\r\n                          fullWidth\r\n                          placeholder=\"Ex: Rua, Av, Trav.\"\r\n                          name=\"logradouro\"\r\n                          label=\"Logradouro\"\r\n                          variant=\"outlined\" type=\"text\"\r\n                          value={this.state.logradouro}\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Tooltip\r\n                        title=\"Se não Possuir número digite 0\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <TextField\r\n                          id=\"numero\"\r\n                          required\r\n                          fullWidth\r\n                          name=\"numero\"\r\n                          placeholder=\"Apenas número, se não possuir deixe com 0\"\r\n                          label=\"Numero\"\r\n                          variant=\"outlined\" type=\"number\"\r\n                          value={this.state.numero}\r\n                          onChange={this.numeroChange}\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Tooltip\r\n                        title=\"Não Digitar nome de rua, quadra, lote, bairro\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <TextField\r\n                          id=\"complemento\"\r\n                          fullWidth\r\n                          name=\"complemento\"\r\n                          placeholder=\"Bl. Apt. Casa\"\r\n                          label=\"Complemento\"\r\n                          variant=\"outlined\" type=\"text\"\r\n                          value={this.state.complemento}\r\n                          onChange={this.complementoChange}\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Tooltip\r\n                        title=\"Não digitar QD. ,Q. ,Quadra, etc\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <TextField\r\n                          id=\"quadra\"\r\n                          fullWidth\r\n                          {...this.state.numero == 0 ? { required: true } : { required: false }}\r\n                          name=\"quadra\"\r\n                          placeholder=\"Não digitar QD. ,Q. ,Quadra, etc\"\r\n                          label=\"Quadra\"\r\n                          variant=\"outlined\" type=\"text\"\r\n                          value={this.state.quadra}\r\n                          onChange={this.quadraChange}\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: 5,\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Tooltip\r\n                        title=\"Não digitar Lt., L., Lote, etc\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <TextField\r\n                          id=\"lote\"\r\n                          fullWidth\r\n\r\n                          {...this.state.numero == 0 ? { required: true } : { required: false }}\r\n                          name=\"lote\"\r\n                          placeholder=\"Não digitar Lt., L., Lote, etc\"\r\n                          label=\"Lote\"\r\n                          variant=\"outlined\" type=\"text\"\r\n                          value={this.state.lote}\r\n                          onChange={this.loteChange}\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: 5,\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Tooltip\r\n                        title=\"Digitar apenas ponto de referência, se existir\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <TextField\r\n                          id=\"pontoreferencia\"\r\n                          fullWidth\r\n                          name=\"pontoreferencia\"\r\n                          placeholder=\"Digitar apenas ponto de referência, se existir\"\r\n                          label=\"Ponto de Referência\"\r\n                          variant=\"outlined\" type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={this.state.bairros}\r\n                        getOptionLabel={(option) => option.nome}\r\n                        renderInput={(params) =>\r\n                          <TextField\r\n                            {...params}\r\n                            fullWidth\r\n                            id=\"bairro\"\r\n                            label=\"Bairro\"\r\n                            onChange={this.bairroChange}\r\n                            onBlur={this.buscaEndereco}\r\n                            required\r\n                            name=\"bairro\"\r\n                            variant=\"outlined\" />}\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      className=\"btn-pv col-md-12 text-center btn-primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Cadastrar\r\n                </button>\r\n                  </div>\r\n                </fieldset>\r\n              </form>\r\n            </section>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Cadastro;\r\n","D:\\DEV\\REACT\\vacina\\src\\Vacina\\Sidebar.js",[],"D:\\DEV\\REACT\\vacina\\src\\serviceWorker.js",[],"D:\\DEV\\REACT\\vacina\\src\\App.js",[],"D:\\DEV\\REACT\\vacina\\src\\services\\dados.js",[],"D:\\DEV\\REACT\\vacina\\src\\components\\Acessar.js",[],"D:\\DEV\\REACT\\vacina\\src\\components\\Footer.js",[],"D:\\DEV\\REACT\\vacina\\src\\Vacina\\Navtop.js",[],["66","67"],"D:\\DEV\\REACT\\vacina\\src\\services\\api.js",[],"D:\\DEV\\REACT\\vacina\\src\\services\\auth.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":2,"message":"73","line":35,"column":53,"nodeType":"74","messageId":"75","endLine":35,"endColumn":58},{"ruleId":"76","severity":1,"message":"77","line":163,"column":11,"nodeType":"78","messageId":"79","endLine":166,"endColumn":23},{"ruleId":"68","replacedBy":"80"},{"ruleId":"70","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-undef","'Panel' is not defined.","Identifier","undef","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["82"],["83"],"no-global-assign","no-unsafe-negation"]